{
  "openapi": "3.0.0",
  "info": {
    "version": "v1.0.0",
    "title": "SGI-CFA",
    "description": "SGI-CFA project for logistic app",
    "tags": [
      "All"
    ]
  },
  "servers": [
    {
      "url": "http://localhost:8000/api",
      "description": "Localhost server"
    },
    {
      "url": "https://cfa-backend.onrender.com/api",
      "description": "Staging server"
    }
  ],
  "tags": [
    {
      "name": "Users",
      "description": "Users endpoints for truck owners"
    },
    {
      "name": "Admin",
      "description": "Admin endpoints for all administrative users"
    },
    {
      "name": "Driver",
      "description": "Drivers endpoints"
    },
    {
      "name": "Auth",
      "description": "Authentication encpoints for all users"
    },
    {
      "name": "Address",
      "description": "Address encpoints for all users"
    },
    {
      "name": "Order",
      "description": "Address encpoints for all users"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Login to get user token.",
        "responses": {
          "200": {
            "description": "Login response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loginSchema"
                },
                "example": {
                  "status": true,
                  "data": {
                    "email": "johndoe@sample.com",
                    "fullname": "John Doe",
                    "phone": "08012345678"
                  },
                  "message": "Successful message"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/loginSchema"
              },
              "example": {
                "email": "johndoe@sample.com",
                "password": "password"
              }
            }
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Register as truck owner.",
        "responses": {
          "200": {
            "description": "Register response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/registerSchema"
                },
                "example": {
                  "status": true,
                  "data": {
                    "id": "9f9a054b-1dd9-4193-9d99-4b90cbafcc53",
                    "isVerified": false,
                    "fullname": "John Doe",
                    "email": "sample@gmail.com",
                    "phone": "08012345678",
                    "userType": "TruckOwner",
                    "roleId": null,
                    "status": null,
                    "createdAt": "2025-02-27T10:52:28.858",
                    "updatedAt": "2025-02-27T10:52:28.858Z"
                  },
                  "message": "account created"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/registerSchema"
              },
              "example": {
                "email": "johndoe@sample.com",
                "password": "password",
                "fullname": "John Doe",
                "phone": "08012345678",
                "userType": "Truck Owner"
              }
            }
          }
        }
      }
    },
    "/auth/forgot-password": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "request forgot password token.",
        "responses": {
          "200": {
            "description": "Forgot response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/forgotPasswordSchema"
                },
                "example": {
                  "message": "Token has been sent to your email",
                  "status": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/forgotPasswordSchema"
              },
              "example": {
                "email": "johndoe@sample.com"
              }
            }
          }
        }
      }
    },
    "/auth/verify-token": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "verify token",
        "responses": {
          "200": {
            "description": "Forgot response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/verifyTokenSchema"
                },
                "example": {
                  "status": true,
                  "message": "token verified"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/verifyTokenSchema"
              },
              "example": {
                "otp": "johndoe@sample.com"
              }
            }
          }
        }
      }
    },
    "/auth/reset-password": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Reset password",
        "responses": {
          "200": {
            "description": "Forgot response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/verifyTokenSchema"
                },
                "example": {
                  "status": true,
                  "message": "password reset"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/verifyTokenSchema"
              },
              "example": {
                "otp": "johndoe@sample.com",
                "password": "password"
              }
            }
          }
        }
      }
    },
    "/user/dashboard": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "get user dashboard data",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "dashboard response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/truckRegistrationSchema"
                },
                "example": {
                  "status": true,
                  "data": {
                    "totalTrucks": 8,
                    "onTransitTrucks": 1,
                    "completedTrips": 0,
                    "completedJob": [
                      {
                        "id": "73823288-96e7-4d1e-8d68-a6eb4f862d26",
                        "userId": "c03dafef-18bd-472a-9ef5-4f2eef1d30a8",
                        "truckId": null,
                        "pickupId": "1d72eeb4-b3be-42f2-9851-952f00e99c60",
                        "deliveryId": "a0766d13-a58a-49e3-b5de-a17a6d6ff4d6",
                        "neededTruckType": "hiab",
                        "commodityToDeliver": "coacoa",
                        "estimatedWeightOfDelivarables": "400kg",
                        "numberOfDeleverable": "20",
                        "recipientName": "Adam Lalana",
                        "recipientPhone": "08098634548",
                        "status": "Completed",
                        "createdAt": "2025-02-21T02:57:51.342Z",
                        "updatedAt": "2025-02-21T02:57:51.342Z"
                      }
                    ]
                  },
                  "message": "Successful message"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/truck/": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "Get users trucks",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Fetch trucks by status",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "enum": {
                  "type": "array",
                  "example": [
                    "Acive",
                    "In_Transit",
                    "Under_Maintenance",
                    "In_Active"
                  ],
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "get all trucks",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/truckRegistrationSchema"
                },
                "example": {
                  "status": true,
                  "data": [
                    {
                      "capacity": "2500 tone",
                      "type": "ferrari",
                      "registrationPapers": [
                        {
                          "key": "zlhzrwg420rw9y464px7",
                          "url": "https://res.cloudinary.com/dnaj0avcy/image/upload/v1738577300/zlhzrwg420rw9y464px7.png"
                        }
                      ],
                      "id": "62d5eaad-ce6a-4429-bc8d-8d1aae850de7",
                      "plateNumber": "12132432425",
                      "status": "Active",
                      "ownerId": "c48929ba-212e-4aff-8624-ef694ef4216d",
                      "createdById": "c48929ba-212e-4aff-8624-ef694ef4216d",
                      "driverId": null,
                      "createdAt": "2025-02-06T13:00:59.415Z",
                      "updatedAt": "2025-02-06T13:00:59.415Z"
                    },
                    {
                      "capacity": "2500 tone",
                      "type": "ferrari",
                      "registrationPapers": [
                        {
                          "key": "zlhzrwg420rw9y464px7",
                          "url": "https://res.cloudinary.com/dnaj0avcy/image/upload/v1738577300/zlhzrwg420rw9y464px7.png"
                        }
                      ],
                      "id": "62d5eaad-ce6a-4429-bc8d-8d1aae850de7",
                      "plateNumber": "12132432425",
                      "status": "Active",
                      "ownerId": "c48929ba-212e-4aff-8624-ef694ef4216d",
                      "createdById": "c48929ba-212e-4aff-8624-ef694ef4216d",
                      "driverId": null,
                      "createdAt": "2025-02-06T13:00:59.415Z",
                      "updatedAt": "2025-02-06T13:00:59.415Z"
                    }
                  ],
                  "message": "Successful message"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Create new truck by truck owner",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "create truck response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/truckRegistrationSchema"
                },
                "example": {
                  "status": true,
                  "data": {
                    "capacity": "2500 tone",
                    "type": "ferrari",
                    "registrationPapers": [
                      {
                        "key": "zlhzrwg420rw9y464px7",
                        "url": "https://res.cloudinary.com/dnaj0avcy/image/upload/v1738577300/zlhzrwg420rw9y464px7.png"
                      }
                    ],
                    "id": "62d5eaad-ce6a-4429-bc8d-8d1aae850de7",
                    "plateNumber": "12132432425",
                    "status": "Unverified",
                    "ownerId": "c48929ba-212e-4aff-8624-ef694ef4216d",
                    "createdById": "c48929ba-212e-4aff-8624-ef694ef4216d",
                    "driverId": null,
                    "createdAt": "2025-02-06T13:00:59.415Z",
                    "updatedAt": "2025-02-06T13:00:59.415Z"
                  },
                  "message": "Successful message"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/truckRegistrationSchema"
              },
              "example": {
                "licensePlate": "12132432425",
                "truckCapacity": "2500 tone",
                "truckType": "ferrari",
                "registrationPapers": [
                  {
                    "url": "https://res.cloudinary.com/dnaj0avcy/image/upload/v1738577300/zlhzrwg420rw9y464px7.png",
                    "key": "zlhzrwg420rw9y464px7"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/user/truck/completed": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "Get users trucks",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Fetch completed trip by status",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "enum": {
                  "type": "array",
                  "example": [
                    "Completed"
                  ],
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "completed job",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/truckRegistrationSchema"
                },
                "example": {
                  "status": true,
                  "data": [
                    {
                      "capacity": "2500 tone",
                      "type": "ferrari",
                      "registrationPapers": [
                        {
                          "key": "zlhzrwg420rw9y464px7",
                          "url": "https://res.cloudinary.com/dnaj0avcy/image/upload/v1738577300/zlhzrwg420rw9y464px7.png"
                        }
                      ],
                      "id": "62d5eaad-ce6a-4429-bc8d-8d1aae850de7",
                      "plateNumber": "12132432425",
                      "status": "Completed",
                      "ownerId": "c48929ba-212e-4aff-8624-ef694ef4216d",
                      "createdById": "c48929ba-212e-4aff-8624-ef694ef4216d",
                      "driverId": null,
                      "createdAt": "2025-02-06T13:00:59.415Z",
                      "updatedAt": "2025-02-06T13:00:59.415Z"
                    }
                  ],
                  "message": "Successful message"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/truck/{id}": {
      "patch": {
        "tags": [
          "Users"
        ],
        "description": "Update truck details",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Truck response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/truckRegistrationSchema"
                },
                "example": {
                  "status": true,
                  "data": {
                    "capacity": "2500 tone",
                    "type": "ferrari",
                    "registrationPapers": [
                      {
                        "key": "zlhzrwg420rw9y464px7",
                        "url": "https://res.cloudinary.com/dnaj0avcy/image/upload/v1738577300/zlhzrwg420rw9y464px7.png"
                      }
                    ],
                    "id": "62d5eaad-ce6a-4429-bc8d-8d1aae850de7",
                    "plateNumber": "12132432425",
                    "status": "Active",
                    "ownerId": "c48929ba-212e-4aff-8624-ef694ef4216d",
                    "createdById": "c48929ba-212e-4aff-8624-ef694ef4216d",
                    "driverId": null,
                    "createdAt": "2025-02-06T13:00:59.415Z",
                    "updatedAt": "2025-02-06T13:00:59.415Z"
                  },
                  "message": "Successful message"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/truckRegistrationSchema"
              },
              "example": {
                "licensePlate": "12132432425",
                "truckCapacity": "2500 tone",
                "truckType": "ferrari",
                "registrationPapers": [
                  {
                    "url": "https://res.cloudinary.com/dnaj0avcy/image/upload/v1738577300/zlhzrwg420rw9y464px7.png",
                    "key": "zlhzrwg420rw9y464px7"
                  }
                ]
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "description": "Delete truck",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "deleted by id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/truckRegistrationSchema"
                },
                "example": {
                  "status": true,
                  "data": "deleted",
                  "message": "Successful message"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "tags": [
          "Users"
        ],
        "description": "Get truck by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "get by id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/truckRegistrationSchema"
                },
                "example": {
                  "status": true,
                  "data": {
                    "capacity": "2500 tone",
                    "type": "ferrari",
                    "registrationPapers": [
                      {
                        "key": "zlhzrwg420rw9y464px7",
                        "url": "https://res.cloudinary.com/dnaj0avcy/image/upload/v1738577300/zlhzrwg420rw9y464px7.png"
                      }
                    ],
                    "id": "62d5eaad-ce6a-4429-bc8d-8d1aae850de7",
                    "plateNumber": "12132432425",
                    "status": "Active",
                    "ownerId": "c48929ba-212e-4aff-8624-ef694ef4216d",
                    "createdById": "c48929ba-212e-4aff-8624-ef694ef4216d",
                    "driverId": null,
                    "createdAt": "2025-02-06T13:00:59.415Z",
                    "updatedAt": "2025-02-06T13:00:59.415Z"
                  },
                  "message": "Successful message"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/truck/truck-status-report": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "Get truck status report",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Truck report response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/truckRegistrationSchema"
                },
                "example": {
                  "status": true,
                  "data": {
                    "suspendedCount": 0,
                    "availableCount": 2,
                    "onTransitCount": 0,
                    "underMaintenanceCount": 0
                  },
                  "message": "Successful message"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/admin/dashboard/": {
      "post": {
        "tags": [
          "Admin"
        ],
        "description": "Get analytics data.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loginSchema"
                },
                "example": {
                  "status": true,
                  "data": {
                    "email": "johndoe@sample.com",
                    "fullname": "John Doe",
                    "phone": "08012345678"
                  },
                  "message": "Successful message"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/loginSchema"
              },
              "example": {
                "email": "johndoe@sample.com",
                "password": "password"
              }
            }
          }
        }
      }
    },
    "/admin/user/": {
      "post": {
        "tags": [
          "Admin"
        ],
        "description": "Create new user.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Update status response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/updateStatusSchema"
                },
                "example": {
                  "status": true,
                  "data": {
                    "id": "c81153a0-4e95-40b4-a320-1d0acf8c3e70",
                    "isVerified": true,
                    "fullname": "Jane Doe",
                    "email": "sample@gmail.com",
                    "phone": "08012345678",
                    "userType": "TruckOwner",
                    "roleId": null,
                    "status": "Suspended",
                    "driverStatus": "Online",
                    "createdAt": "2025-03-01T15:32:10.929Z",
                    "updatedAt": "2025-03-01T17:12:58.113Z"
                  },
                  "message": "Successful message"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/updateStatusSchema"
              },
              "example": {
                "status": "Active"
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Admin"
        ],
        "description": "Get lists of all users",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Fetch trucks by status",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "enum": {
                  "type": "array",
                  "example": [
                    "Active",
                    "Pending",
                    "Suspendend"
                  ],
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Fuzzy search for users by full name or email",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "pagination",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "pagination",
            "required": false,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "all user response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loginSchema"
                },
                "example": {
                  "status": true,
                  "data": [
                    {
                      "userType": "Admin",
                      "createdAt": "2025-03-01T15:33:21.397Z",
                      "email": "sample@yopmail.com",
                      "fullname": "Tech Admin",
                      "isVerified": true,
                      "phone": "08012345678",
                      "role": null,
                      "status": "Active",
                      "createBy": []
                    },
                    {
                      "userType": "TruckOwner",
                      "createdAt": "2025-03-01T15:32:10.929Z",
                      "email": "sample@gmail.com",
                      "fullname": "Jane Doe",
                      "isVerified": true,
                      "phone": "08012345678",
                      "role": null,
                      "status": "Active",
                      "createBy": [
                        {
                          "capacity": "2500 tone",
                          "type": "bugati",
                          "registrationPapers": [
                            {
                              "key": "zlhzrwg420rw9y464px7",
                              "url": "https://res.cloudinary.com/dnaj0avcy/image/upload/v1738577300/zlhzrwg420rw9y464px7.png"
                            }
                          ],
                          "id": "e03171ee-c958-422b-b476-8af181965f3e",
                          "plateNumber": "12132432424",
                          "status": "In_Active",
                          "ownerId": "c81153a0-4e95-40b4-a320-1d0acf8c3e70",
                          "createdById": "c81153a0-4e95-40b4-a320-1d0acf8c3e70",
                          "driverId": null,
                          "locationId": null,
                          "createdAt": "2025-03-01T19:08:37.952Z",
                          "updatedAt": "2025-03-01T19:24:36.544Z"
                        }
                      ]
                    }
                  ],
                  "message": "Successful message"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/admin/user/permission": {
      "get": {
        "tags": [
          "Admin"
        ],
        "description": "Get all roles",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loginSchema"
                },
                "example": {
                  "status": true,
                  "data": {
                    "email": "johndoe@sample.com",
                    "fullname": "John Doe",
                    "phone": "08012345678"
                  },
                  "message": "Successful message"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/loginSchema"
              },
              "example": {
                "email": "johndoe@sample.com",
                "password": "password"
              }
            }
          }
        }
      }
    },
    "/admin/user/permission/{id}": {
      "get": {
        "tags": [
          "Admin"
        ],
        "description": "get single role by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loginSchema"
                },
                "example": {
                  "status": true,
                  "data": {
                    "email": "johndoe@sample.com",
                    "fullname": "John Doe",
                    "phone": "08012345678"
                  },
                  "message": "Successful message"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/loginSchema"
              },
              "example": {
                "email": "johndoe@sample.com",
                "password": "password"
              }
            }
          }
        }
      }
    },
    "/admin/user/role": {
      "post": {
        "tags": [
          "Admin"
        ],
        "description": "Create new role.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loginSchema"
                },
                "example": {
                  "status": true,
                  "data": {
                    "email": "johndoe@sample.com",
                    "fullname": "John Doe",
                    "phone": "08012345678"
                  },
                  "message": "Successful message"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/loginSchema"
              },
              "example": {
                "email": "johndoe@sample.com",
                "password": "password"
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Admin"
        ],
        "description": "Get all roles",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loginSchema"
                },
                "example": {
                  "status": true,
                  "data": {
                    "email": "johndoe@sample.com",
                    "fullname": "John Doe",
                    "phone": "08012345678"
                  },
                  "message": "Successful message"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/loginSchema"
              },
              "example": {
                "email": "johndoe@sample.com",
                "password": "password"
              }
            }
          }
        }
      }
    },
    "/admin/user/role/{id}": {
      "get": {
        "tags": [
          "Admin"
        ],
        "description": "get single role by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loginSchema"
                },
                "example": {
                  "status": true,
                  "data": {
                    "email": "johndoe@sample.com",
                    "fullname": "John Doe",
                    "phone": "08012345678"
                  },
                  "message": "Successful message"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/loginSchema"
              },
              "example": {
                "email": "johndoe@sample.com",
                "password": "password"
              }
            }
          }
        }
      }
    },
    "/admin/user/update-user-status/{id}": {
      "patch": {
        "tags": [
          "Admin"
        ],
        "description": "Update user statua.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Update status response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/updateStatusSchema"
                },
                "example": {
                  "status": true,
                  "data": {
                    "id": "c81153a0-4e95-40b4-a320-1d0acf8c3e70",
                    "isVerified": true,
                    "fullname": "Jane Doe",
                    "email": "sample@gmail.com",
                    "phone": "08012345678",
                    "userType": "TruckOwner",
                    "roleId": null,
                    "status": "Suspended",
                    "driverStatus": "Online",
                    "createdAt": "2025-03-01T15:32:10.929Z",
                    "updatedAt": "2025-03-01T17:12:58.113Z"
                  },
                  "message": "Successful message"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/updateStatusSchema"
              },
              "example": {
                "status": "Active"
              }
            }
          }
        }
      }
    },
    "/admin/user/add-role-permissions": {
      "post": {
        "tags": [
          "Admin"
        ],
        "description": "Create new role.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loginSchema"
                },
                "example": {
                  "status": true,
                  "data": {
                    "email": "johndoe@sample.com",
                    "fullname": "John Doe",
                    "phone": "08012345678"
                  },
                  "message": "Successful message"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/loginSchema"
              },
              "example": {
                "email": "johndoe@sample.com",
                "password": "password"
              }
            }
          }
        }
      }
    },
    "/admin/user/assign-role-user": {
      "post": {
        "tags": [
          "Admin"
        ],
        "description": "Create new role.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loginSchema"
                },
                "example": {
                  "status": true,
                  "data": {
                    "email": "johndoe@sample.com",
                    "fullname": "John Doe",
                    "phone": "08012345678"
                  },
                  "message": "Successful message"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/loginSchema"
              },
              "example": {
                "email": "johndoe@sample.com",
                "password": "password"
              }
            }
          }
        }
      }
    },
    "/admin/user/{id}": {
      "get": {
        "tags": [
          "Admin"
        ],
        "description": "Get one user by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "get a user by id response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loginSchema"
                },
                "example": {
                  "status": true,
                  "data": {
                    "userType": "TruckOwner",
                    "createdAt": "2025-03-01T15:32:10.929Z",
                    "email": "sample@gmail.com",
                    "fullname": "Jane Doe",
                    "isVerified": true,
                    "phone": "08012345678",
                    "role": null,
                    "status": "Active",
                    "createBy": [
                      {
                        "capacity": "2500 tone",
                        "type": "bugati",
                        "registrationPapers": [
                          {
                            "key": "zlhzrwg420rw9y464px7",
                            "url": "https://res.cloudinary.com/dnaj0avcy/image/upload/v1738577300/zlhzrwg420rw9y464px7.png"
                          }
                        ],
                        "id": "e03171ee-c958-422b-b476-8af181965f3e",
                        "plateNumber": "12132432424",
                        "status": "In_Active",
                        "ownerId": "c81153a0-4e95-40b4-a320-1d0acf8c3e70",
                        "createdById": "c81153a0-4e95-40b4-a320-1d0acf8c3e70",
                        "driverId": null,
                        "locationId": null,
                        "createdAt": "2025-03-01T19:08:37.952Z",
                        "updatedAt": "2025-03-01T19:24:36.544Z"
                      }
                    ],
                    "transaction": [],
                    "order": [],
                    "addresses": [],
                    "roleId": null,
                    "truck": [
                      {
                        "capacity": "2500 tone",
                        "type": "bugati",
                        "registrationPapers": [
                          {
                            "key": "zlhzrwg420rw9y464px7",
                            "url": "https://res.cloudinary.com/dnaj0avcy/image/upload/v1738577300/zlhzrwg420rw9y464px7.png"
                          }
                        ],
                        "id": "e03171ee-c958-422b-b476-8af181965f3e",
                        "plateNumber": "12132432424",
                        "status": "In_Active",
                        "ownerId": "c81153a0-4e95-40b4-a320-1d0acf8c3e70",
                        "createdById": "c81153a0-4e95-40b4-a320-1d0acf8c3e70",
                        "driverId": null,
                        "locationId": null,
                        "createdAt": "2025-03-01T19:08:37.952Z",
                        "updatedAt": "2025-03-01T19:24:36.544Z"
                      }
                    ]
                  },
                  "message": "Successful message"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/admin/booking/{id}": {
      "put": {
        "tags": [
          "Admin"
        ],
        "description": "Update booking status.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Update booking response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loginSchema"
                },
                "example": {
                  "status": true,
                  "data": {},
                  "message": "Successful message"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/updateStatusSchema"
              },
              "example": {
                "status": "Pending"
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Admin"
        ],
        "description": "Get one user by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get single booking response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/orderSchema"
                },
                "example": {
                  "status": true,
                  "data": {},
                  "message": "Successful message"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/admin/booking/": {
      "get": {
        "tags": [
          "Admin"
        ],
        "description": "Get lists of all users",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "page size",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "page number",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Fetch bookings by status",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "enum": {
                  "type": "array",
                  "example": [
                    "Acive",
                    "In_Progress",
                    "Pending",
                    "COmpleted"
                  ],
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get all bookings response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/orderSchema"
                },
                "example": {
                  "status": true,
                  "data": [],
                  "message": "Successful message"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/admin/booking/assign": {
      "put": {
        "tags": [
          "Admin"
        ],
        "description": "Assign truck and driver to order.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Assign driver and truck to booking response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loginSchema"
                },
                "example": {
                  "status": true,
                  "data": {},
                  "message": "Successful message"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/orderSchema"
              },
              "example": {
                "truckId": "62d5eaad-ce6a-4429-bc8d-8d1aae850de7",
                "driverId": "62d5eaad-ce6a-4429-bc8d-8d1aae850de7"
              }
            }
          }
        }
      }
    },
    "/admin/truck/update-truck-status/{id}": {
      "put": {
        "tags": [
          "Admin"
        ],
        "description": "Update truck status",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Update status response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/updateStatusSchema"
                },
                "example": {
                  "status": true,
                  "data": {
                    "capacity": "2500 tone",
                    "type": "bugati",
                    "registrationPapers": [
                      {
                        "key": "zlhzrwg420rw9y464px7",
                        "url": "https://res.cloudinary.com/dnaj0avcy/image/upload/v1738577300/zlhzrwg420rw9y464px7.png"
                      }
                    ],
                    "id": "e03171ee-c958-422b-b476-8af181965f3e",
                    "plateNumber": "12132432424",
                    "status": "Unverified",
                    "ownerId": "c81153a0-4e95-40b4-a320-1d0acf8c3e70",
                    "createdById": "c81153a0-4e95-40b4-a320-1d0acf8c3e70",
                    "driverId": null,
                    "locationId": null,
                    "createdAt": "2025-03-01T19:08:37.952Z",
                    "updatedAt": "2025-03-01T19:08:37.952Z"
                  },
                  "message": "Successful message"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/updateStatusSchema"
              },
              "example": {
                "status": "Active"
              }
            }
          }
        }
      }
    },
    "/admin/truck/": {
      "get": {
        "tags": [
          "Admin"
        ],
        "description": "Get List of trucks",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Fetch trucks by status",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "enum": {
                  "type": "array",
                  "example": [
                    "Active",
                    "In_Transit",
                    "Under_Maintenance",
                    "In_Active",
                    "Unverified"
                  ],
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Fuzzy search for trucks by truck type or plate number",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "pagination",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "pagination",
            "required": false,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "get all trucks",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/truckRegistrationSchema"
                },
                "example": {
                  "status": true,
                  "data": [
                    {
                      "capacity": "2500 tone",
                      "type": "ferrari",
                      "registrationPapers": [
                        {
                          "key": "zlhzrwg420rw9y464px7",
                          "url": "https://res.cloudinary.com/dnaj0avcy/image/upload/v1738577300/zlhzrwg420rw9y464px7.png"
                        }
                      ],
                      "id": "62d5eaad-ce6a-4429-bc8d-8d1aae850de7",
                      "plateNumber": "12132432425",
                      "status": "Available",
                      "ownerId": "c48929ba-212e-4aff-8624-ef694ef4216d",
                      "createdById": "c48929ba-212e-4aff-8624-ef694ef4216d",
                      "driverId": null,
                      "createdAt": "2025-02-06T13:00:59.415Z",
                      "updatedAt": "2025-02-06T13:00:59.415Z"
                    },
                    {
                      "capacity": "2500 tone",
                      "type": "ferrari",
                      "registrationPapers": [
                        {
                          "key": "zlhzrwg420rw9y464px7",
                          "url": "https://res.cloudinary.com/dnaj0avcy/image/upload/v1738577300/zlhzrwg420rw9y464px7.png"
                        }
                      ],
                      "id": "62d5eaad-ce6a-4429-bc8d-8d1aae850de7",
                      "plateNumber": "12132432425",
                      "status": "Available",
                      "ownerId": "c48929ba-212e-4aff-8624-ef694ef4216d",
                      "createdById": "c48929ba-212e-4aff-8624-ef694ef4216d",
                      "driverId": null,
                      "createdAt": "2025-02-06T13:00:59.415Z",
                      "updatedAt": "2025-02-06T13:00:59.415Z"
                    }
                  ],
                  "message": "Successful message",
                  "count": 0
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/admin/truck/{id}": {
      "get": {
        "tags": [
          "Admin"
        ],
        "description": "get single truck by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "single truck response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/truckRegistrationSchema"
                },
                "example": {
                  "status": true,
                  "data": {
                    "capacity": "2500 tone",
                    "type": "ferrari",
                    "registrationPapers": [
                      {
                        "key": "zlhzrwg420rw9y464px7",
                        "url": "https://res.cloudinary.com/dnaj0avcy/image/upload/v1738577300/zlhzrwg420rw9y464px7.png"
                      }
                    ],
                    "id": "62d5eaad-ce6a-4429-bc8d-8d1aae850de7",
                    "plateNumber": "12132432425",
                    "status": "Available",
                    "ownerId": "c48929ba-212e-4aff-8624-ef694ef4216d",
                    "createdById": "c48929ba-212e-4aff-8624-ef694ef4216d",
                    "driverId": null,
                    "createdAt": "2025-02-06T13:00:59.415Z",
                    "updatedAt": "2025-02-06T13:00:59.415Z"
                  },
                  "message": "Successful message"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/order/": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/order/address": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "address creation response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/addressSchema"
                },
                "example": {
                  "status": true,
                  "message": "Address created successfully"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get a single address response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/addressSchema"
                },
                "example": {
                  "status": true,
                  "data": [
                    {
                      "id": "1ab7f032-2af5-4d84-a6e3-2f869b55c70e",
                      "userId": "ff0c3469-db01-402c-bad8-9ecf48474289",
                      "country": "Nigeria",
                      "state": "Ogun",
                      "city": "Oshodi",
                      "street": "Aswani Road",
                      "houseNumber": "27",
                      "landmark": null,
                      "postalCode": null,
                      "status": true,
                      "isDefault": true,
                      "isPickup": true,
                      "createdAt": "2025-04-01T18:22:48.237Z",
                      "updatedAt": "2025-04-07T21:50:08.617Z"
                    },
                    {
                      "id": "1ab7f032-2af5-4d84-a6e3-2f869b55c70e",
                      "userId": "ff0c3469-db01-402c-bad8-9ecf48474289",
                      "country": "Nigeria",
                      "state": "Ogun",
                      "city": "Oshodi",
                      "street": "Aswani Road",
                      "houseNumber": "27",
                      "landmark": null,
                      "postalCode": null,
                      "status": true,
                      "isDefault": true,
                      "isPickup": true,
                      "createdAt": "2025-04-01T18:22:48.237Z",
                      "updatedAt": "2025-04-07T21:50:08.617Z"
                    }
                  ],
                  "message": "address found"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/order/address/{id}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pickup address updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/addressSchema"
                },
                "example": {
                  "status": true,
                  "data": {
                    "id": "1ab7f032-2af5-4d84-a6e3-2f869b55c70e",
                    "userId": "ff0c3469-db01-402c-bad8-9ecf48474289",
                    "country": "Nigeria",
                    "state": "Ogun",
                    "city": "Oshodi",
                    "street": "Aswani Road",
                    "houseNumber": "27",
                    "landmark": null,
                    "postalCode": null,
                    "status": true,
                    "isDefault": true,
                    "isPickup": true,
                    "createdAt": "2025-04-01T18:22:48.237Z",
                    "updatedAt": "2025-04-07T21:50:08.617Z"
                  },
                  "message": "Pickup address updated successfully"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "loginSchema": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "johno@sample.com"
          },
          "password": {
            "type": "string",
            "example": "password"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "registerSchema": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "object"
          },
          "properties": {
            "type": "object",
            "properties": {
              "email": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "format": {
                    "type": "string",
                    "example": "email"
                  },
                  "example": {
                    "type": "string",
                    "example": "johno@sample.com"
                  }
                }
              },
              "password": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "example": {
                    "type": "string",
                    "example": "password"
                  }
                }
              },
              "fullname": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "example": {
                    "type": "string",
                    "example": "John Doe"
                  }
                }
              },
              "phone": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "example": {
                    "type": "string",
                    "example": "08012345678"
                  }
                }
              },
              "userType": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "enum": {
                    "type": "array",
                    "example": [
                      "Truck Owner",
                      "Driver"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "type": "string",
                    "example": "Truck Owner"
                  }
                }
              }
            }
          },
          "required": {
            "type": "array",
            "example": [
              "email",
              "password",
              "fullname",
              "phone",
              "userType"
            ],
            "items": {
              "type": "string"
            }
          }
        }
      },
      "forgotPasswordSchema": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "johno@sample.com"
          }
        },
        "required": [
          "email"
        ]
      },
      "verifyTokenSchema": {
        "type": "object",
        "properties": {
          "otp": {
            "type": "string",
            "example": "123456"
          }
        },
        "required": [
          "otp"
        ]
      },
      "resetPasswordSchema": {
        "type": "object",
        "properties": {
          "otp": {
            "type": "string",
            "example": "johno@sample.com"
          },
          "password": {
            "type": "string",
            "example": "Password"
          }
        },
        "required": [
          "otp",
          "password"
        ]
      },
      "truckRegistrationSchema": {
        "type": "object",
        "properties": {
          "licensePlate": {
            "type": "string",
            "example": "12132432425"
          },
          "truckCapacity": {
            "type": "string",
            "example": "2500 tone"
          },
          "truckType": {
            "type": "string",
            "example": "ferrari"
          },
          "registrationPapers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string",
                  "example": "https://res.cloudinary.com/dnaj0avcy/image/upload/v1738577300/zlhzrwg420rw9y464px7.png"
                },
                "key": {
                  "type": "string",
                  "example": "zlhzrwg420rw9y464px7"
                }
              },
              "required": [
                "url",
                "key"
              ]
            }
          }
        },
        "required": [
          "licensePlate",
          "truckCapacity",
          "truckType",
          "registrationPapers"
        ]
      },
      "orderSchema": {
        "type": "object",
        "properties": {
          "neededTruckType": {
            "type": "string",
            "example": "Flatbed"
          },
          "commodityToDeliver": {
            "type": "string",
            "example": "Cement"
          },
          "estimatedWeightOfDelivarables": {
            "type": "string",
            "example": "2000"
          },
          "numberOfDeleverable": {
            "type": "string",
            "example": "1000"
          },
          "pickupId": {
            "type": "string",
            "example": "12223"
          },
          "deliveryId": {
            "type": "string",
            "example": "122121"
          },
          "recipientName": {
            "type": "string",
            "example": "John Doe"
          },
          "recipientPhone": {
            "type": "string",
            "example": "08012345678"
          }
        },
        "required": [
          "neededTruckType",
          "commodityToDeliver",
          "estimatedWeightOfDelivarables",
          "numberOfDeleverable",
          "pickupId",
          "deliveryId",
          "recipientName",
          "recipientPhone"
        ]
      },
      "updateStatusSchema": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "Active"
          }
        },
        "required": [
          "status"
        ]
      },
      "addressSchema": {
        "type": "object",
        "properties": {
          "pickUpHouseNumber": {
            "type": "string",
            "example": "12"
          },
          "pickupAddress": {
            "type": "string",
            "example": "Ojuelegba"
          },
          "pickUpCity": {
            "type": "string",
            "example": "Lagos"
          },
          "pickUpState": {
            "type": "string",
            "example": "Lagos"
          },
          "deliveryHouseNumber": {
            "type": "string",
            "example": "12"
          },
          "deliveryAddress": {
            "type": "string",
            "example": "Ojuelegba"
          },
          "deliveryCity": {
            "type": "string",
            "example": "Lagos"
          },
          "deliveableState": {
            "type": "string",
            "example": "Lagos"
          },
          "country": {
            "type": "string",
            "example": "Nigeria"
          }
        },
        "required": [
          "pickUpHouseNumber",
          "pickupAddress",
          "pickUpCity",
          "pickUpState",
          "deliveryHouseNumber",
          "deliveryAddress",
          "deliveryCity",
          "deliveableState",
          "country"
        ]
      }
    }
  }
}